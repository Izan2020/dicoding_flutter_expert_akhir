// Mocks generated by Mockito 5.4.2 from annotations
// in ditonton/test/presentation/interface/screens/tvseries/tv_series_detail_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i11;
import 'dart:ui' as _i12;

import 'package:core/utils/state_enum.dart' as _i9;
import 'package:mockito/mockito.dart' as _i1;
import 'package:tvseries/domain/entities/series.dart' as _i10;
import 'package:tvseries/domain/entities/series_detail.dart' as _i7;
import 'package:tvseries/domain/usecases/get_series_detail.dart' as _i2;
import 'package:tvseries/domain/usecases/get_series_recommendation.dart' as _i3;
import 'package:tvseries/domain/usecases/get_watchlist_status_series.dart'
    as _i4;
import 'package:tvseries/domain/usecases/remove_watchlist.dart' as _i6;
import 'package:tvseries/domain/usecases/save_watchlist.dart' as _i5;
import 'package:tvseries/presentation/provider/series_detail_notifier.dart'
    as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGetSeriesDetail_0 extends _i1.SmartFake
    implements _i2.GetSeriesDetail {
  _FakeGetSeriesDetail_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetSeriesRecommendation_1 extends _i1.SmartFake
    implements _i3.GetSeriesRecommendation {
  _FakeGetSeriesRecommendation_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetWatchlistStatusSeries_2 extends _i1.SmartFake
    implements _i4.GetWatchlistStatusSeries {
  _FakeGetWatchlistStatusSeries_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSaveWatchlistSeries_3 extends _i1.SmartFake
    implements _i5.SaveWatchlistSeries {
  _FakeSaveWatchlistSeries_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRemoveWatchlistSeries_4 extends _i1.SmartFake
    implements _i6.RemoveWatchlistSeries {
  _FakeRemoveWatchlistSeries_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSeriesDetail_5 extends _i1.SmartFake implements _i7.SeriesDetail {
  _FakeSeriesDetail_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SeriesDetailNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockSeriesDetailNotifier extends _i1.Mock
    implements _i8.SeriesDetailNotifier {
  MockSeriesDetailNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetSeriesDetail get getSeriesDetail => (super.noSuchMethod(
        Invocation.getter(#getSeriesDetail),
        returnValue: _FakeGetSeriesDetail_0(
          this,
          Invocation.getter(#getSeriesDetail),
        ),
      ) as _i2.GetSeriesDetail);
  @override
  _i3.GetSeriesRecommendation get getSeriesRecommendation =>
      (super.noSuchMethod(
        Invocation.getter(#getSeriesRecommendation),
        returnValue: _FakeGetSeriesRecommendation_1(
          this,
          Invocation.getter(#getSeriesRecommendation),
        ),
      ) as _i3.GetSeriesRecommendation);
  @override
  _i4.GetWatchlistStatusSeries get getWatchlistSeriesStatus =>
      (super.noSuchMethod(
        Invocation.getter(#getWatchlistSeriesStatus),
        returnValue: _FakeGetWatchlistStatusSeries_2(
          this,
          Invocation.getter(#getWatchlistSeriesStatus),
        ),
      ) as _i4.GetWatchlistStatusSeries);
  @override
  _i5.SaveWatchlistSeries get saveWatchlistSeries => (super.noSuchMethod(
        Invocation.getter(#saveWatchlistSeries),
        returnValue: _FakeSaveWatchlistSeries_3(
          this,
          Invocation.getter(#saveWatchlistSeries),
        ),
      ) as _i5.SaveWatchlistSeries);
  @override
  _i6.RemoveWatchlistSeries get removeWatchlistSeries => (super.noSuchMethod(
        Invocation.getter(#removeWatchlistSeries),
        returnValue: _FakeRemoveWatchlistSeries_4(
          this,
          Invocation.getter(#removeWatchlistSeries),
        ),
      ) as _i6.RemoveWatchlistSeries);
  @override
  _i7.SeriesDetail get seriesDetail => (super.noSuchMethod(
        Invocation.getter(#seriesDetail),
        returnValue: _FakeSeriesDetail_5(
          this,
          Invocation.getter(#seriesDetail),
        ),
      ) as _i7.SeriesDetail);
  @override
  _i9.RequestState get seriesDetailState => (super.noSuchMethod(
        Invocation.getter(#seriesDetailState),
        returnValue: _i9.RequestState.Empty,
      ) as _i9.RequestState);
  @override
  _i9.RequestState get seriesRecommendationState => (super.noSuchMethod(
        Invocation.getter(#seriesRecommendationState),
        returnValue: _i9.RequestState.Empty,
      ) as _i9.RequestState);
  @override
  bool get isAddedToWatchlist => (super.noSuchMethod(
        Invocation.getter(#isAddedToWatchlist),
        returnValue: false,
      ) as bool);
  @override
  String get currentMessage => (super.noSuchMethod(
        Invocation.getter(#currentMessage),
        returnValue: '',
      ) as String);
  @override
  String get watchListSaveMessage => (super.noSuchMethod(
        Invocation.getter(#watchListSaveMessage),
        returnValue: '',
      ) as String);
  @override
  List<_i10.Series> get seriesRecommendations => (super.noSuchMethod(
        Invocation.getter(#seriesRecommendations),
        returnValue: <_i10.Series>[],
      ) as List<_i10.Series>);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i11.Future<void> fetchSeriesDetail(int? id) => (super.noSuchMethod(
        Invocation.method(
          #fetchSeriesDetail,
          [id],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  _i11.Future<void> removeWatchlist(_i7.SeriesDetail? tv) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [tv],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  _i11.Future<void> saveWatchlist(_i7.SeriesDetail? tv) => (super.noSuchMethod(
        Invocation.method(
          #saveWatchlist,
          [tv],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  _i11.Future<void> loadWatchlistStatus(int? id) => (super.noSuchMethod(
        Invocation.method(
          #loadWatchlistStatus,
          [id],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  void addListener(_i12.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i12.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
