// Mocks generated by Mockito 5.4.2 from annotations
// in ditonton/test/presentation/interface/home_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i10;
import 'dart:ui' as _i11;

import 'package:core/common/enums.dart' as _i9;
import 'package:core/utils/state_enum.dart' as _i13;
import 'package:ditonton/presentation/provider/home_notifier.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;
import 'package:movies/domain/entities/movie.dart' as _i16;
import 'package:movies/domain/usecases/get_now_playing_movies.dart' as _i5;
import 'package:movies/domain/usecases/get_popular_movies.dart' as _i6;
import 'package:movies/domain/usecases/get_top_rated_movies.dart' as _i7;
import 'package:movies/presentation/provider/movie_list_notifier.dart' as _i15;
import 'package:tvseries/domain/entities/series.dart' as _i14;
import 'package:tvseries/domain/usecases/get_now_playing_series.dart' as _i2;
import 'package:tvseries/domain/usecases/get_popular_series.dart' as _i3;
import 'package:tvseries/domain/usecases/get_top_rated_series.dart' as _i4;
import 'package:tvseries/presentation/provider/series_list_notifier.dart'
    as _i12;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGetPlayingSeries_0 extends _i1.SmartFake
    implements _i2.GetPlayingSeries {
  _FakeGetPlayingSeries_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetPopularSeries_1 extends _i1.SmartFake
    implements _i3.GetPopularSeries {
  _FakeGetPopularSeries_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetTopRatedSeries_2 extends _i1.SmartFake
    implements _i4.GetTopRatedSeries {
  _FakeGetTopRatedSeries_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetNowPlayingMovies_3 extends _i1.SmartFake
    implements _i5.GetNowPlayingMovies {
  _FakeGetNowPlayingMovies_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetPopularMovies_4 extends _i1.SmartFake
    implements _i6.GetPopularMovies {
  _FakeGetPopularMovies_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetTopRatedMovies_5 extends _i1.SmartFake
    implements _i7.GetTopRatedMovies {
  _FakeGetTopRatedMovies_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HomeNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeNotifier extends _i1.Mock implements _i8.HomeNotifier {
  MockHomeNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.HomeEvent get homeEvent => (super.noSuchMethod(
        Invocation.getter(#homeEvent),
        returnValue: _i9.HomeEvent.Movies,
      ) as _i9.HomeEvent);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i10.Future<void> setHomeEvent(_i9.HomeEvent? value) => (super.noSuchMethod(
        Invocation.method(
          #setHomeEvent,
          [value],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  void addListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [SeriesListNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockSeriesListNotifier extends _i1.Mock
    implements _i12.SeriesListNotifier {
  MockSeriesListNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetPlayingSeries get getPlayingSeries => (super.noSuchMethod(
        Invocation.getter(#getPlayingSeries),
        returnValue: _FakeGetPlayingSeries_0(
          this,
          Invocation.getter(#getPlayingSeries),
        ),
      ) as _i2.GetPlayingSeries);
  @override
  _i3.GetPopularSeries get getPopularSeries => (super.noSuchMethod(
        Invocation.getter(#getPopularSeries),
        returnValue: _FakeGetPopularSeries_1(
          this,
          Invocation.getter(#getPopularSeries),
        ),
      ) as _i3.GetPopularSeries);
  @override
  _i4.GetTopRatedSeries get getTopRatedSeries => (super.noSuchMethod(
        Invocation.getter(#getTopRatedSeries),
        returnValue: _FakeGetTopRatedSeries_2(
          this,
          Invocation.getter(#getTopRatedSeries),
        ),
      ) as _i4.GetTopRatedSeries);
  @override
  _i13.RequestState get nowPlayingState => (super.noSuchMethod(
        Invocation.getter(#nowPlayingState),
        returnValue: _i13.RequestState.Empty,
      ) as _i13.RequestState);
  @override
  List<_i14.Series> get listOfNowPlaying => (super.noSuchMethod(
        Invocation.getter(#listOfNowPlaying),
        returnValue: <_i14.Series>[],
      ) as List<_i14.Series>);
  @override
  _i13.RequestState get popularState => (super.noSuchMethod(
        Invocation.getter(#popularState),
        returnValue: _i13.RequestState.Empty,
      ) as _i13.RequestState);
  @override
  List<_i14.Series> get listOfPopular => (super.noSuchMethod(
        Invocation.getter(#listOfPopular),
        returnValue: <_i14.Series>[],
      ) as List<_i14.Series>);
  @override
  _i13.RequestState get topRatedState => (super.noSuchMethod(
        Invocation.getter(#topRatedState),
        returnValue: _i13.RequestState.Empty,
      ) as _i13.RequestState);
  @override
  List<_i14.Series> get listOfTopRated => (super.noSuchMethod(
        Invocation.getter(#listOfTopRated),
        returnValue: <_i14.Series>[],
      ) as List<_i14.Series>);
  @override
  String get currentMessage => (super.noSuchMethod(
        Invocation.getter(#currentMessage),
        returnValue: '',
      ) as String);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i10.Future<void> fetchPlayingSeries() => (super.noSuchMethod(
        Invocation.method(
          #fetchPlayingSeries,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> fetchPopularSeries() => (super.noSuchMethod(
        Invocation.method(
          #fetchPopularSeries,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> fetchTopRatedSeries() => (super.noSuchMethod(
        Invocation.method(
          #fetchTopRatedSeries,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  void addListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [MovieListNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieListNotifier extends _i1.Mock implements _i15.MovieListNotifier {
  MockMovieListNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.GetNowPlayingMovies get getNowPlayingMovies => (super.noSuchMethod(
        Invocation.getter(#getNowPlayingMovies),
        returnValue: _FakeGetNowPlayingMovies_3(
          this,
          Invocation.getter(#getNowPlayingMovies),
        ),
      ) as _i5.GetNowPlayingMovies);
  @override
  _i6.GetPopularMovies get getPopularMovies => (super.noSuchMethod(
        Invocation.getter(#getPopularMovies),
        returnValue: _FakeGetPopularMovies_4(
          this,
          Invocation.getter(#getPopularMovies),
        ),
      ) as _i6.GetPopularMovies);
  @override
  _i7.GetTopRatedMovies get getTopRatedMovies => (super.noSuchMethod(
        Invocation.getter(#getTopRatedMovies),
        returnValue: _FakeGetTopRatedMovies_5(
          this,
          Invocation.getter(#getTopRatedMovies),
        ),
      ) as _i7.GetTopRatedMovies);
  @override
  List<_i16.Movie> get nowPlayingMovies => (super.noSuchMethod(
        Invocation.getter(#nowPlayingMovies),
        returnValue: <_i16.Movie>[],
      ) as List<_i16.Movie>);
  @override
  _i13.RequestState get nowPlayingState => (super.noSuchMethod(
        Invocation.getter(#nowPlayingState),
        returnValue: _i13.RequestState.Empty,
      ) as _i13.RequestState);
  @override
  List<_i16.Movie> get popularMovies => (super.noSuchMethod(
        Invocation.getter(#popularMovies),
        returnValue: <_i16.Movie>[],
      ) as List<_i16.Movie>);
  @override
  _i13.RequestState get popularMoviesState => (super.noSuchMethod(
        Invocation.getter(#popularMoviesState),
        returnValue: _i13.RequestState.Empty,
      ) as _i13.RequestState);
  @override
  List<_i16.Movie> get topRatedMovies => (super.noSuchMethod(
        Invocation.getter(#topRatedMovies),
        returnValue: <_i16.Movie>[],
      ) as List<_i16.Movie>);
  @override
  _i13.RequestState get topRatedMoviesState => (super.noSuchMethod(
        Invocation.getter(#topRatedMoviesState),
        returnValue: _i13.RequestState.Empty,
      ) as _i13.RequestState);
  @override
  String get message => (super.noSuchMethod(
        Invocation.getter(#message),
        returnValue: '',
      ) as String);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i10.Future<void> fetchNowPlayingMovies() => (super.noSuchMethod(
        Invocation.method(
          #fetchNowPlayingMovies,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> fetchPopularMovies() => (super.noSuchMethod(
        Invocation.method(
          #fetchPopularMovies,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> fetchTopRatedMovies() => (super.noSuchMethod(
        Invocation.method(
          #fetchTopRatedMovies,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  void addListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
